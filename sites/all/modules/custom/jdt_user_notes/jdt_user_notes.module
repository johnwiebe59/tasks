<?php

/**
 * @file
 *
 * Module file for jdt_user_notes
 */

require_once('jdt_user_notes_api.inc');
require_once('jdt_user_notes_forms.inc');

/**
 * Implements hook_permission()
 *
 * Defines new permissions for jdt_user_notes
 */
function jdt_user_notes_permission() {
    return array(
        'notes' => array(
            'title' => t('Add Notes'),
            'description' => t('Allows a user to create and update their own notes.')
        )
    );
}

/**
 * Implements hook_menu()
 *
 * Create a menu entry to link to note creation form
 */
function jdt_user_notes_menu() {

    // Create note menu
    $items['node/%/%ctools_js/create_note'] = array(
        'title' => 'Create Note',
        'description' => 'Creates a new note for an article',
        'page callback' => 'jdt_user_notes_create_note',
        'page arguments' => array(1, 2),
        'access arguments' => array('notes'),
        'type' => MENU_CALLBACK
    );
    // Update note menu
    $items['node/%/update'] = array(
        'title' => 'Update Note',
        'description' => 'Update the text of an existing note',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('jdt_user_notes_update_form', 1, 2),
        'access arguments' => array('notes')
    );

    return $items;
}

/**
 * Handles the modal popup
 */
function jdt_user_notes_create_note($nid, $js = NULL) {
    if ($js) {
        ctools_include('ajax');
        ctools_include('modal');

        $form_state = array(
            'ajax' => TRUE,
            'title' => t('Create a New Note'),
            'nid' => $nid
        );

        $output = ctools_modal_form_wrapper('jdt_user_notes_new_form', $form_state, $nid);

        if (!empty($form_state['ajax_commads'])) {
            $output = $form_state['ajax_commands'];
        }

        print ajax_render($output);
        drupal_exit();
    }
    else {
        return drupal_get_form('jdt_user_notes_new_form', $nid);
    }
}

/**
 * Implements hook_block_info()
 *
 * Defines a block only visible on pages of content type 'article'
 * And a block for displaying site statistics
 */
function jdt_user_notes_block_info() {
  $blocks['notes'] = array(
    'info' => t('Display Notes'),
    'cache' => DRUPAL_CACHE_PER_USER,
    'status' => 1,
    'region' => 'sidebar_first',
    'visibility' => BLOCK_VISIBILITY_PHP,
    // Ugly code to only display block if the user has permission and the page is an article
    'pages' => "<?php
                  if (arg(0) == 'node' && is_numeric(arg(1))) { 
                    if (user_access('note')) {
                      if (node_load(arg(1))->type == 'article') {
                        return TRUE;
                      }
                    }
                  } 
                  return FALSE; 
                ?>"
  );

  $blocks['statistics'] = array(
    'info' => t('Site Statistics'),
    'cache' => DRUPAL_CACHE_PER_ROLE,
    'status' => 1
  );

  return $blocks;
}

/**
 * Implements hook_block_view()
 */
function jdt_user_notes_block_view($delta = '') {
  $block = '';
  switch ($delta) {
    case 'notes' :
      ctools_include('modal');
      ctools_modal_add_js();

      $block['subject'] = t('Notes for this article:');
      $block['content'] = drupal_get_form('jdt_user_notes_article_form', arg(1));
      break;

    case 'statistics' :
      $block['subject'] = t('Site Statistics');
      $block['content'] = site_statistics_content();
      break;
  }
  return $block;
}

/**
 * Generates the content for the site statistics block
 */
function site_statistics_content() {
  $articles = db_select('node')
    ->condition('type', 'article', '=')
    ->countQuery()
    ->execute()
    ->fetchField();

  $notes = db_select('jdt_user_notes')
    ->countQuery()
    ->execute()
    ->fetchField();

  $users = db_select('users')
    ->countQuery()
    ->execute()
    ->fetchField();

  $content = array(
    '#items' => array(
      'Number of Articles: ' . $articles,
      'Number of Notes: ' . $notes,
      'Number of Users: ' . ($users - 1)
    ),
    '#theme' => 'item_list'
  );
  return $content;
}
